<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <link>https://kowalcj0.github.io/</link>
    <description>Recent content on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 07 Jun 2020 18:08:50 +0100</lastBuildDate>
    
	<atom:link href="https://kowalcj0.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Books worth reading</title>
      <link>https://kowalcj0.github.io/general/books/</link>
      <pubDate>Sun, 07 Jun 2020 18:08:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/general/books/</guid>
      <description>Stats  Books read by year:   2020: 3  Total number of completed books since May 2020: 3  Po Polsku  Absurd Everestu  by: Denis Urubko  (orig. Абсурд Эвереста)  meta  published: 2013  genres: biography, mountaineering  completed: 2020-06-05  links:     Words/Idioms/Terms:  zrejterować - wycofać się, zrezygonować, uciekać, brać nogi za pas dworować sobie z kogoś - szydzić, wyśmiewać się z kogoś, drwić, odnosić się z pogardą somnambuliczny - lunatyczny sybaryta - człowiek, który spędza czas na przyjemnościach i uwielbia zbytek; hedonista, epikurejczyk, wygodniś jumar - urządzenie sportowe umożliwiające przemieszczanie się po pionowo przymocowanej linie    Genialni  by: Mariusz Urbanek   meta  published: 2014  genres: history, biography, science, mathematics  completed: 2020-05-27  links:      Quotes:  David Hawkins, żegnając przyjaciela, napisał: &amp;ldquo;Ludzie, którzy żyją tylko trochę, tylko trochę umierają.</description>
    </item>
    
    <item>
      <title>Automatically Delete Old Pa11y Results From MongoDB</title>
      <link>https://kowalcj0.github.io/2020/06/06/automatically-delete-old-pa11y-results-from-mongodb/</link>
      <pubDate>Sat, 06 Jun 2020 22:56:03 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/06/06/automatically-delete-old-pa11y-results-from-mongodb/</guid>
      <description>You&amp;rsquo;ve probably already noticed that Pa11y-Dashboard runs all the tasks on a daily basis. If you have a lot of tasks (e.g. 100+) then the test results can fairly quickly gobble up your MongoDB quota (if you have any).
If your MongoDB has a size limit defined, then you can do two things:
 manually delete old test results or use TTL Index to do it for you automagically  MongoDB supports TTL indexes  since v2.</description>
    </item>
    
    <item>
      <title>How to Proxy Requests to Pa11y Webservice Hosted on Heroku</title>
      <link>https://kowalcj0.github.io/2020/06/04/how-to-proxy-requests-to-pa11y-webservice-hosted-on-heroku/</link>
      <pubDate>Thu, 04 Jun 2020 13:39:45 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/06/04/how-to-proxy-requests-to-pa11y-webservice-hosted-on-heroku/</guid>
      <description>Pa11y-Dashboard runs of top of Pa11y Webservice  (WS).
By default Pa11y WS listens on port 3000 and Pa11y Dashboard listens on port 4000.
Unfortunately Heroku doesn&amp;rsquo;t allow its users to easily expose multiple ports per application.
To overcome this limitation, I&amp;rsquo;ve decided to make Pa11y-Dashboard proxy requests to WS via /ws/ endpoint.
After a bit of searching I&amp;rsquo;ve found a dedicated proxy module for expressjs called express-http-proxy  .</description>
    </item>
    
    <item>
      <title>Run Pa11y Dashboard on Heroku</title>
      <link>https://kowalcj0.github.io/2020/06/03/run-pa11y-on-heroku/</link>
      <pubDate>Wed, 03 Jun 2020 19:57:26 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/06/03/run-pa11y-on-heroku/</guid>
      <description>To run Pa11y Dashboard on Heroku, you&amp;rsquo;ll need to:
 add puppeteer buildpack  to your dyno pass --no-sandbox argument to Chrome  Puppeteer buildpack will install Chrome and all dependencies required to run it in headless mode.
Second step is only necessary if you&amp;rsquo;re going to see following error when running Pa11y tests on Heroku:
Failed to launch chrome! No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox.</description>
    </item>
    
    <item>
      <title>Add Basic Auth to Pa11y</title>
      <link>https://kowalcj0.github.io/2020/06/02/add-basic-auth-to-pa11y/</link>
      <pubDate>Tue, 02 Jun 2020 16:33:26 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/06/02/add-basic-auth-to-pa11y/</guid>
      <description>Pa11y  is a great open sourced automated accessibility testing tool.
It uses headless Chrome browser and HTML_CodeSniffer  as test runner.
Unfortunately out of the box Pa11y Dashboard  doesn&amp;rsquo;t come with any form of authentication. This might be OK for some people, but in our case we&amp;rsquo;re going to add basic-auth to it.
This short tutorial is based on pa11y-dashboard v3.1.0.
Enter http-auth I&amp;rsquo;ve selected http-auth  package to do the job as it&amp;rsquo;s a popular and actively maintained package.</description>
    </item>
    
    <item>
      <title>UrlString</title>
      <link>https://kowalcj0.github.io/2020/05/14/python-url-strings/</link>
      <pubDate>Thu, 14 May 2020 14:10:00 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/05/14/python-url-strings/</guid>
      <description>UrlString  is a convenience wrapper around a string object for making it easy to build URL strings. It borrows the / syntax from pathlib  to allow for the building of natural looking URLs.
An example implementation by UK Trade team:
class UrlString(str): def __truediv__(self, other): base = self.strip(&amp;#39;/&amp;#39;) path = other.strip(&amp;#39;/&amp;#39;) return UrlString(f&amp;#39;{base}/{path}/&amp;#39;) Usage:
home = UrlString(&amp;#39;https://example.com&amp;#39;) new_url = home / &amp;#39;foo&amp;#39; / &amp;#39;bar&amp;#39; print(new_url) https://example.com/foo/bar/ </description>
    </item>
    
    <item>
      <title>Decrypt Signal message DB</title>
      <link>https://kowalcj0.github.io/2020/05/03/decrypt-signal-message-db/</link>
      <pubDate>Sun, 03 May 2020 21:46:49 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/05/03/decrypt-signal-message-db/</guid>
      <description>All but the last step are based on this answer on unix.stackexchange: https://unix.stackexchange.com/questions/505008/signal-desktop-how-to-export-messages
Locate db.sqlite &amp;amp; db key Find Signal DB one of these locations:
 ~/.config/Signal/sql/db.sqlite ~/.var/app/org.signal.Signal/config/Signal/sql/db.sqlite  The decryption key is in config.json which is located in one thes location:
 ~/.config/Signal/config.json ~/.var/app/org.signal.Signal/config/Signal/config.json  Compile sqlcipher As of writing, you&amp;rsquo;ll need sqlcipher v3.30 or newer to decrypt Signal&amp;rsquo;s message DB.
Get it from https://github.com/sqlcipher/sqlcipher
Then compile it with dynamic linking:</description>
    </item>
    
    <item>
      <title>Articles worth reading</title>
      <link>https://kowalcj0.github.io/general/articles/</link>
      <pubDate>Sat, 02 May 2020 16:56:52 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/general/articles/</guid>
      <description>A while ago I&amp;rsquo;ve discovered Wallabag  . It&amp;rsquo;s a self hostable application for saving web pages. It extracts the article&amp;rsquo;s content and can automatically tag it with matching label. Basically it&amp;rsquo;s an open-source competitor of Pocket  , Instapaper  or Evernote  .
Fetching a list of all entries via Wallabag&amp;amp;rsquo;s API  is very easy. And with a help of jq  you can transform it into a simple JSON file which you can use to populate a Hugo Data Templates  .</description>
    </item>
    
    <item>
      <title>import zipfile</title>
      <link>https://kowalcj0.github.io/2020/04/30/import-zipfile/</link>
      <pubDate>Thu, 30 Apr 2020 20:05:24 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/04/30/import-zipfile/</guid>
      <description>Recently, I had a look at zipfile  module.
It&amp;rsquo;s surprisingly easy to work with.
Snippets below should give you a rough idea how to use it.
Create a zip file import zipfile file_to_compress = &amp;#34;server.log&amp;#34; zip_file_name = &amp;#34;server.log.zip&amp;#34; with zipfile.ZipFile(zip_file_name, &amp;#34;w&amp;#34;, zipfile.ZIP_DEFLATED) as myzip: myzip.write(file_to_compress) NOTE: 3rd argument defines the compression type.
Choose from:
 ZIP_STORED (no compression) ZIP_DEFLATED (requires zlib) ZIP_BZIP2 (requires bz2) ZIP_LZMA (requires lzma)  Unpack a zip archive with zipfile.</description>
    </item>
    
    <item>
      <title>FreeNas/FreeBSD hardware/diagnostic tools</title>
      <link>https://kowalcj0.github.io/2020/04/28/handy-freebsd-diagnostic-tools/</link>
      <pubDate>Tue, 28 Apr 2020 22:02:34 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/04/28/handy-freebsd-diagnostic-tools/</guid>
      <description>Handy CLI tools that might help your with diagnosing/debugging issues on your FreeBSD/FreeNAS machine.
Recommended reading  FreeNAS documentation on CLI tools: https://www.ixsystems.com/documentation/freenas/11.3-U2/cli.html FreeBSD Display Information About The System Hardware: https://www.cyberciti.biz/tips/freebsd-display-information-about-the-system.html  camcontrol The camcontrol  utility is designed to provide a way for users to access and control the FreeBSD CAM subsystem.
# camcontrol devlist &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus0 target 0 lun 0 (pass0,ada0) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus1 target 0 lun 0 (pass1,ada1) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus2 target 0 lun 0 (pass2,ada2) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus2 target 0 lun 0 (pass3,ada3) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus4 target 0 lun 0 (pass4,ada4) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus5 target 0 lun 0 (pass5,ada5) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus5 target 0 lun 0 (pass6,ada6) &amp;lt;ST4000VN003-1T5168 SC46&amp;gt; at scbus5 target 0 lun 0 (pass7,ada7) &amp;lt;SanDisk Dual Drive 1.</description>
    </item>
    
    <item>
      <title>Listen to podcasts in MPD</title>
      <link>https://kowalcj0.github.io/2020/03/22/listen-to-podcasts-in-mpd/</link>
      <pubDate>Sun, 22 Mar 2020 12:02:34 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/03/22/listen-to-podcasts-in-mpd/</guid>
      <description>Requirements  mpd  &amp;amp; mpc   a list of podcast RSS feed links  Example podcast RSS feed links Here&amp;rsquo;s list of my favourite English &amp;amp; Polish podcasts in an OPML format.
You can extract RSS feed links from it with:
awk -F &amp;#39;&amp;#34;&amp;#39; &amp;#39;{print $6}&amp;#39; podcasts.opml | sed &amp;#39;/^$/d&amp;#39; Load podcast into MPD Given that you&amp;rsquo;ve saved your podcast feed list in ~/Music/podcasts.rss.
Then with a simple while loop you can load your podcast episodes into mpd.</description>
    </item>
    
    <item>
      <title>Convert old mov files to more modern mp4 x264 or AV1</title>
      <link>https://kowalcj0.github.io/2020/03/21/convert-mov-to-mp4-or-av1/</link>
      <pubDate>Sat, 21 Mar 2020 11:59:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2020/03/21/convert-mov-to-mp4-or-av1/</guid>
      <description>Some time ago I&amp;rsquo;ve discovered a bunch of old QuickTime files on my NAS. None of those clips could be played back via NextCloud&amp;rsquo;s browser player as they were encoded with old school mjpeg  video codec &amp;amp; low quality mono pcm_s16be audio.
This is what mediainfo told me about those files:
Video Format : JPEG Codec ID : jpeg Bit rate mode : Variable Bit rate : 3 827 kb/s Width : 640 pixels Height : 480 pixels Display aspect ratio : 4:3 Frame rate mode : Constant Frame rate : 30.</description>
    </item>
    
    <item>
      <title>Movies worth watching</title>
      <link>https://kowalcj0.github.io/general/movies/</link>
      <pubDate>Sat, 21 Mar 2020 11:59:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/general/movies/</guid>
      <description>Below you&amp;rsquo;ll find some movies that I particularly like. Some of the them are available on Amazon Prime Video  or mubi.com  .
AFAIK most of the titles below are not available on Netflix.
Great movie lists If you looking for something interesting to watch have a look at those lists:
 iMDB: Top 250   iMDB: Top 100 Greatest Movies of All Time (The Ultimate List)   iMDB: Top 50 spanish movies   MUBI: Top 1000   MUBI: 30 must see Japanese film classics   MUBI: Top 50 Japanese films   MUBI: Top Indian films    Recent and fairly recent     Title Director Genres Year Links Comments    1917 Sam Mendes Drama, War 2019       Amazing long takes  The Gentleman Guy Ritchie Action, Comedy, Crime 2019         Bacurau Kleber Mendonça Filho, Juliano Dornelles Weird Western 2019       Imagine Tarantino going on holidays to Brazil just to make a movie about human hunting as a sport combined with some references to The Magnificent Seven and to Brazilian social banditry legends (Cangaço).</description>
    </item>
    
    <item>
      <title>Security BSides Warszawa 2019</title>
      <link>https://kowalcj0.github.io/2019/10/15/security-bsides-warszawa-2019/</link>
      <pubDate>Tue, 15 Oct 2019 20:41:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2019/10/15/security-bsides-warszawa-2019/</guid>
      <description>Linki do różnych narzędzi, artykułów, blogów itp o których dowiedziałem się podczas konferencji Security BSides Warsaw 2019  Nagrania  dzień pierwszy https://www.youtube.com/watch?v=BoR119sLN6s dzień drugi https://www.youtube.com/watch?v=bTU-22DtYBc  Slajdy  http://frankowicz.me/sbs2019 Trzy lata fuzzingu&amp;hellip; I czy coś to zmieniło? https://aptmasterclass.com/bsides19/ Nietrywialna komunikacja C2 - jakie to proste! https://www.slideshare.net/wojdwo/budowanie-i-hakowanie-nowoczesnych-aplikacji-ios Budowanie i hakowanie nowoczesnych aplikacji iOS  Narzędzia  AFL&amp;#43;&amp;#43;  American Fuzzy Lop plus plus bandit  A tool designed to find common security issues in Python code.</description>
    </item>
    
    <item>
      <title>Play moview with DTS audio on Chromecast</title>
      <link>https://kowalcj0.github.io/2019/06/09/cast-dts-movie-to-chromecast/</link>
      <pubDate>Sun, 09 Jun 2019 20:35:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2019/06/09/cast-dts-movie-to-chromecast/</guid>
      <description>According to the official specification  Chromecast (even Ultra version) doesn&amp;rsquo;t support DTS.
If you can&amp;rsquo;t be bothered to spend few hours to transcode the movie with lets say Handbrake  you can use ver handy CLI casting tool: castnow  .
Once installed, simply tell it to use ffmpeg to transcode audio to mp3 (or ac3 or aac).
castnow your-wonderful-movie.mkv \  --tomp4 \  --ffmpeg-vcodec copy \  --ffmpeg-acodec mp3 \  --ffmpeg-movflags frag_keyframe+empty_moov+faststart    use movflags if you will only hear the audio and you&amp;rsquo;ll see a black screen    The only downside of transcoding is that the play / pause controls are not supported.</description>
    </item>
    
    <item>
      <title>Tasty smoothie - no. 1</title>
      <link>https://kowalcj0.github.io/2019/05/18/tasty-smothie-no-1/</link>
      <pubDate>Sat, 18 May 2019 19:44:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2019/05/18/tasty-smothie-no-1/</guid>
      <description>A simple recipe for a delicious smoothie.
Ingredients:  50-80g yoghurt 100ml milk (regular, soy or oat etc.) 1 medium banana 1 passion fruit 1 small lime few raspberries few blueberries 2-4 strawberries water to top it up  Extras: You might add:
 jam (for some extra flavour) ispaghula husk (e.g Fybogel orange flavour  ) - for those with IBS  </description>
    </item>
    
    <item>
      <title>Logrotate your bash history file</title>
      <link>https://kowalcj0.github.io/2019/05/13/logrotate-bash-history/</link>
      <pubDate>Mon, 13 May 2019 11:50:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2019/05/13/logrotate-bash-history/</guid>
      <description>A while ago I decided to take more control over my bash history and I followed this advice https://unix.stackexchange.com/a/48113  .
With time I&amp;rsquo;ve tweaked few settings, like ignore lines that start with space, and ignore some of the trivial commands like ls:
export HISTCONTROL=ignoredups:erasedups:ignorespace # no duplicate entries &amp;amp; lines starting with space export HISTSIZE=99999999 # big big history export HISTFILESIZE=99999999 # big big history shopt -s histappend # append to history, don&#39;t overwrite it export PROMPT_COMMAND=&amp;quot;history -a; history -c; history -r; $PROMPT_COMMAND&amp;quot; # Save and reload the history after each command finishes HISTIGNORE=&#39;ll *:ls *:l:gs:&#39; # ignore some commands Nevertheless, every now and then I&amp;rsquo;d loose the command history, e.</description>
    </item>
    
    <item>
      <title>Stop using URL shorteners</title>
      <link>https://kowalcj0.github.io/2018/08/20/stop-using-url-shortners/</link>
      <pubDate>Mon, 20 Aug 2018 18:41:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/08/20/stop-using-url-shortners/</guid>
      <description>Why do people use URL shorteners?
They&amp;rsquo;re simply unreliable and bad for privacy.
I&amp;rsquo;ve already encountered quite a few dead short URLs because the URL shortener service was closed down and it was rather painfull waste of time to find the original link.
They&amp;rsquo;re bad for privacy because the shortener service knows what are you browsing.
Why would give away such important meta data about your readers to someone else?</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Wireless Networks - notes</title>
      <link>https://kowalcj0.github.io/2018/05/14/ethical-hacking-wireless-networks-notes/</link>
      <pubDate>Mon, 14 May 2018 19:35:30 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/05/14/ethical-hacking-wireless-networks-notes/</guid>
      <description>Cain - wireless scanner, cracker etc.  WEP  build to prevent eavesdropping ensures integrity of transmitted data is a lightweight solution (does not require a lot of CPU power) is not very secure as it doesn&amp;rsquo;t allow to distribute keys at scale uses weak encryption key recovery is possible through sniffing!!! uses 40-bit keys &amp;amp; 24-bit initialization vectors (IVs too small) frequently used poor implementations of random number generators prone to DoS attacks through use of associate &amp;amp; disassociate messages  WPA  Wi-Fi Protected Access (WPA) was introduced to replace WEP uses TKIP (Temporal Key Integrity Protocol) which changes the key for every frame that is transmitted.</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Mobile Devices and Platforms - notes</title>
      <link>https://kowalcj0.github.io/2018/04/28/ethical-hacking-mobile-devices-and-platforms/</link>
      <pubDate>Sat, 28 Apr 2018 10:29:15 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/04/28/ethical-hacking-mobile-devices-and-platforms/</guid>
      <description>Good sources of knowledge:
 OWASP Testing guide - book OWASP Pinning cheat sheet  Android Application  Executes as:  application service   Helpers  Broadcast receiver (allows app to register for specifi events which will be then passed to it for action) content provider (it interfaces between app and file storage and provide sql-like interface to read/write/modify/delete data). SQLite is a common DB service access via content provider.</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Denial of Service - notes</title>
      <link>https://kowalcj0.github.io/2018/04/23/ethical-hacking-denial-of-service-attacks/</link>
      <pubDate>Mon, 23 Apr 2018 19:19:15 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/04/23/ethical-hacking-denial-of-service-attacks/</guid>
      <description>These are just my notes from the Pluralsight course: &amp;ldquo;Ethical Hacking: Denial of Service&amp;rdquo; by Troy Hunt.
HTTP flood attack  HTTP flood attack  it&amp;rsquo;s a &amp;ldquo;volumetric&amp;rdquo; attack - they&amp;rsquo;re normal HTTP requests it can saturate web server resources (&amp;ldquo;service request flood&amp;rdquo;) can saturate bandwidth (&amp;ldquo;bandwidth attack&amp;rdquo;)   Attack effectives can be amplified via certain app features:  They use resources (login page, api endpoint) that takes a lot of resources or time to process (like slow hashing function on login page) requests that result in SMTP connections (sending email after registering dummy accounts, password reset page etc) long-running requests (like DB heavy requests) download of large files to flood bandwidth   Requests can adhere to legitimate patterns which makes defence difficult  TCP attacks These are the layer 4 (OSI) attacks</description>
    </item>
    
    <item>
      <title>Play videoclip for currently playing song in mpv</title>
      <link>https://kowalcj0.github.io/2018/03/29/get-song-title-from-dbus-via-mpris2-find-videoclip-with-ddgr-on-youtube-and-play-it-with-mpv/</link>
      <pubDate>Thu, 29 Mar 2018 15:15:14 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/03/29/get-song-title-from-dbus-via-mpris2-find-videoclip-with-ddgr-on-youtube-and-play-it-with-mpv/</guid>
      <description>Short demo: Your browser does not support the video tag.  Requirements You&amp;rsquo;ll need:
 python 3.x mpv  video player music player that supports MPRIS2 D-Bus interface   mpd  + mpDris2   deadbeef  + mpris2-plugin     some D-Bus packages -&amp;gt; dbus-devel dbus-python-devel dbus-glib-devel ddgr https://github.com/jarun/ddgr - a CLI client for DuckDuckGo  System packages Once you have your player &amp;amp; MPRIS2 installed &amp;amp; configured, install:</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Buffer Overflow - notes</title>
      <link>https://kowalcj0.github.io/2018/03/20/ethical-hackin-buffer-iverflow/</link>
      <pubDate>Tue, 20 Mar 2018 19:20:10 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/03/20/ethical-hackin-buffer-iverflow/</guid>
      <description>These are just my notes from the Pluralsight course: &amp;ldquo;Ethical Hacking: Buffer Overflows&amp;rdquo; by James Murray.
Stack pointers Types of stack pointers:
 SP → Stack Pointer  keeps track where the next element will be pushe to or poppef off of the stack   FP → Frame Pointer  points to the beginning of the stack frame for the current function call used to easily find inf. associated with the fucntion being executed   BP → Base Pointer (different name for FP) IP → Instruction Pointer  points to the location in the memory that contains next machine language instruction that is to be executed by the CPU.</description>
    </item>
    
    <item>
      <title>Tweaking Intel graphics on Linux</title>
      <link>https://kowalcj0.github.io/2018/03/15/tweaking-intel-graphics-on-linux/</link>
      <pubDate>Thu, 15 Mar 2018 08:46:10 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/03/15/tweaking-intel-graphics-on-linux/</guid>
      <description>get info about firmware
modinfo i915 | grep ^fi List all driver parameters
modinfo -p i915 If find the output of the above command confusing, as you can&amp;rsquo;t see the actual values of every parameter, then use:
sudo grep -H &#39;&#39; /sys/module/i915//parameters/* If you see error messages like this one:
$ dmesg |tail [ 2360.475430] [drm] not enough stolen space for compressed buffer (need 4325376 bytes), disabling [ 2360.475437] [drm] hint: you may be able to increase stolen memory size in the BIOS to avoid this then you can enable framebuffer compression.</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Hacking Exposed - Notes</title>
      <link>https://kowalcj0.github.io/2018/02/26/ethical-hackin-hacking-exposed/</link>
      <pubDate>Mon, 26 Feb 2018 21:20:12 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/02/26/ethical-hackin-hacking-exposed/</guid>
      <description>These are just my notes from the video course: &amp;ldquo;Ethical Hacking: Hacking Exposed&amp;rdquo; by Troy Hunt.
Intro Questions to ask and answer when deciding on levels of security:
 What is most confidential to you? What can&amp;rsquo;t you afford to lose? What is irreplaceable? What could cause the most damage? What might impact your reputation?  The answers to those question will specify your security assets that you will protect.</description>
    </item>
    
    <item>
      <title>Fix &#39;X11 connection broke&#39; issue in QT based GUI applications like VLC</title>
      <link>https://kowalcj0.github.io/2018/02/11/vlc-auto-screen-scale-factor-issue/</link>
      <pubDate>Sun, 11 Feb 2018 22:40:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/02/11/vlc-auto-screen-scale-factor-issue/</guid>
      <description>If you ever encountered error like this when starting vlc:
$ vlc VLC media player 3.0.0-rc5 Vetinari (revision 3.0.0-rc5-0-gf53236af09) [0000560cfbe38410] main libvlc: Running vlc with the default interface. Use &amp;#39;cvlc&amp;#39; to use vlc without interface. The X11 connection broke: Maximum allowed requested length exceeded (code 4) XIO: fatal IO error 22 (Invalid argument) on X server &amp;#34;:0&amp;#34; after 447 requests (447 known processed) with 0 events remaining. QMutex: destroying locked mutex Then you can fix it by setting the QT_AUTO_SCREEN_SCALE_FACTOR env variable to 0, i.</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Sniffers - Notes</title>
      <link>https://kowalcj0.github.io/2018/02/05/ethical-hackin-sniffers-course-notes/</link>
      <pubDate>Mon, 05 Feb 2018 09:22:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/02/05/ethical-hackin-sniffers-course-notes/</guid>
      <description>These are just my notes from the video course: &amp;ldquo;Ethical Hacking: Sniffers&amp;rdquo;.
Sniffing overview IPS (Intrusion Prevention System) / IDS (Intrusion Detection System) monitor the networks for threats, intrusions and allowed protocols.
Network admins should monitor network traffic for few minutes a day.
Phases of Packet Analysis  Gather Decode Display Analyze  Note:
epan - Ethereal Packet Analyzer - it&amp;rsquo;s the packet-analyzing engine for Etheral/Wireshark.
OSI Model    Layer Name Role Protocols PDU Address     7 Application Initiate contact with the network HTTP, FTP, SMTP DATA    6 Presentation Format data , optional compression and encapsulation  Data    5 Session Initiates, maintains and tear down session  Data    4 Transport Transport data TCP, UDP Segment Port   3 Network Addressing and routing IP, ICMP (ARP) Packet IP   2 Data link Frame formation Ethernet II (ARP) Frame MAC   1 Physical Data is transmitter on the media  Bits     IPv4 structure    IPv4 headers                                 Passive vs Active attacks Two types of attacks:</description>
    </item>
    
    <item>
      <title>Allow GUI applications run by root user to connect to X server</title>
      <link>https://kowalcj0.github.io/2018/02/04/allow-application-run-by-root-to-connect-to-x-server/</link>
      <pubDate>Sun, 04 Feb 2018 13:46:30 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/02/04/allow-application-run-by-root-to-connect-to-x-server/</guid>
      <description>Recently I had an annoying problem running Wireshark as root user on Fedora 27 (Wayland + Gnome 3.26).
I was getting following error:
sudo wireshark QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to &amp;#39;/tmp/runtime-root&amp;#39; QXcbConnection: Could not connect to display Aborted (core dumped) To fix this, you need to add root user to the list of users allowed to make connections to the X server.
xhost si:localuser:root That&amp;rsquo;s it. From now on, you shouldn&amp;rsquo;t have any problems running GUI applications by root user.</description>
    </item>
    
    <item>
      <title>Ethical Hacking - Enumeration - Notes</title>
      <link>https://kowalcj0.github.io/2018/02/02/ethical-hackin-enumeration-course-notes/</link>
      <pubDate>Fri, 02 Feb 2018 19:20:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/02/02/ethical-hackin-enumeration-course-notes/</guid>
      <description>These are just my notes from the video course: &amp;ldquo;Ethical Hacking: Enumeration&amp;rdquo;.
Introduction Protocols/Technologies used in Enumeration  DNS (port 21) SMTP (port 161) RPC NetBIOS (port 139) SMB (port 444)  Protection Rings Every OS has it&amp;rsquo;s own set of Protection Rings -&amp;gt; for more see wiki  Windows Kernel Protection rings  Ring 0 - kernel mode Ring 1 &amp;amp; 2 - in windows it&amp;rsquo;s traditionally unused now it\s used for virtualization like Intel VtX Ring 3 - user mode  OpenVMS has 4 rings:</description>
    </item>
    
    <item>
      <title>The Human Condition I: No Greater Love</title>
      <link>https://kowalcj0.github.io/2018/01/29/human-condition-i-no-greater-love/</link>
      <pubDate>Mon, 29 Jan 2018 10:40:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/01/29/human-condition-i-no-greater-love/</guid>
      <description>Ratings &amp;amp; further reading Runtime: 208 minutes
 IMDb  8.6 / 10 Rotten Tomatoes  89% - avg. rating 7.7 / 10 Wikipedia    Plot  A Japanese pacifist, unable to face the dire consequences of conscientious objection, is transformed by his attempts to compromise with the demands of war-time Japan. 1
 My few cents What I like about this movie:
 how barren lands of Manchuria turned into somehow beautiful landscapes is that the director with his camera managed not to be an obstrustive and unwanted actor inner strugle of the main character emotions  It&amp;rsquo;s great movie and in my opinion it deserves 9 out of 10 points.</description>
    </item>
    
    <item>
      <title>Syntax Highlighting in Hugo</title>
      <link>https://kowalcj0.github.io/2018/01/27/syntax-highlighting-in-hugo/</link>
      <pubDate>Sat, 27 Jan 2018 22:28:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/01/27/syntax-highlighting-in-hugo/</guid>
      <description>Bye bye Prism. Welcome Chroma. I just learnt that from version 0.28 Hugo comes with a built-in syntax highlighter called Chroma  .
It supports syntax highlighting with GitHub flavoured code fences!
This is more than great!
Because of this I could quickly get rid of a bit bulky Prism  JS syntax highlighter.
Enable Chroma Start by choosing your Chrome style from gallery available at https://help.farbox.com/pygments.html  Then generate a css file:</description>
    </item>
    
    <item>
      <title>Learning web app secuiry with OWASP Mutillidae II - part 1</title>
      <link>https://kowalcj0.github.io/2018/01/23/mutillidae-ii-part-1/</link>
      <pubDate>Tue, 23 Jan 2018 14:41:50 +0100</pubDate>
      
      <guid>https://kowalcj0.github.io/2018/01/23/mutillidae-ii-part-1/</guid>
      <description>iNSTALLATION Run nowasp container:
docker run -p 8888:80 -p 3306:3306 citizenstig/nowasp Go to http://localhost:8888/  , and build the DB.
eXCERCICES: OWASP 2013 A1 - Injection (SQL) - SQLi Extract data - User info Submit the form with such query in the Name field:
admin&amp;#39;-- AND &amp;#39;password=&amp;#39;password&amp;#39; Response should contain:
Username=admin Password=adminpass Signature=g0t r00t? A1 - Injection (SQL) - SQLi Bypass authentication - Login You can use the same query in the Name field:</description>
    </item>
    
    <item>
      <title>How to install multiple versions of GO on the same machine [linux]</title>
      <link>https://kowalcj0.github.io/2015/10/01/install-multiple-versions-of-go-on-the-same-machine-linux/</link>
      <pubDate>Thu, 01 Oct 2015 15:19:01 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2015/10/01/install-multiple-versions-of-go-on-the-same-machine-linux/</guid>
      <description>This quick tutorial shows how to do install multiple versions of go manually. I&amp;rsquo;ll try to prepare a shell script that will do it automatically for you :)
1. download different versions of GO wget https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz wget https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz wget https://storage.googleapis.com/golang/go1.5.linux-amd64.tar.gz wget https://storage.googleapis.com/golang/go1.5.1.linux-amd64.tar.gz 2. Create directories for specific version of GO sudo mkdir -p /usr/local/go/1.4.2/ sudo mkdir -p /usr/local/go/1.4.3/ sudo mkdir -p /usr/local/go/1.5/ sudo mkdir -p /usr/local/go/1.5.1/ 3. Unpack downloaded GO releases sudo tar -C /usr/local/go/1.</description>
    </item>
    
    <item>
      <title>Getting the Brightness Control to work on Lenovo ThinkPad with Linux Mint 17 (x64) installed and with Nvidia Quadro K1000M on board</title>
      <link>https://kowalcj0.github.io/2014/08/10/getting-the-brightness-control-to-work-on-lenovo-thinkpad-with-linux-mint-17-x64-installed-and-with-nvidia-quadro-k1000m-on-board/</link>
      <pubDate>Sun, 10 Aug 2014 10:03:30 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/08/10/getting-the-brightness-control-to-work-on-lenovo-thinkpad-with-linux-mint-17-x64-installed-and-with-nvidia-quadro-k1000m-on-board/</guid>
      <description>I haven&amp;rsquo;t had much problems with getting the Brightness Control to work in Mint 16, but after installing v17 I had to struggle much more.
I honestly admit that I don&amp;rsquo;t know which of the following steps actually did the trick, nevertheless it works now :)
OK, I&amp;rsquo;m currently running Mint 17 x64 on Lenovo W530 with Nvidia Quadro K1000M and with Nvidia 331.38 installed. Display mode in BIOS is set to Discrete Mode.</description>
    </item>
    
    <item>
      <title>Create a bootable USB pendrive to upgrade Lenovo ThinkPad W530 BIOS</title>
      <link>https://kowalcj0.github.io/2014/08/09/create-a-bootable-usb-on-linux-mint-ububtu-pendrive-to-upgrade-lenovo-thinkpad-w530-bios/</link>
      <pubDate>Sat, 09 Aug 2014 14:24:43 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/08/09/create-a-bootable-usb-on-linux-mint-ububtu-pendrive-to-upgrade-lenovo-thinkpad-w530-bios/</guid>
      <description>Recently I had to update the bios of my laptop from a USB pendrive, because I had no CD/DVD drive around. Cameron Seader&amp;rsquo;s post Lenovo BIOS Update method for Linux and USB thumb drive  came very handy, but used an obsolete tool so I updated his instructions a bit to make them work.
1. Get the machine type and model of your laptop In order to grab this information you can either go to the BIOS or use dmidecode or hwinfo.</description>
    </item>
    
    <item>
      <title>How to unit test Django&#39;s Function Based Views</title>
      <link>https://kowalcj0.github.io/2014/07/31/how-to-unit-test-djangos-function-based-views/</link>
      <pubDate>Thu, 31 Jul 2014 13:27:58 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/07/31/how-to-unit-test-djangos-function-based-views/</guid>
      <description>Let&amp;rsquo;s assume than the URL pattern to your Function Based View is defined like that:
_urls.py_
urlpatterns = patterns( ..., url(r&amp;#39;^$&amp;#39;, views.index, name=&amp;#39;index&amp;#39;), ... ) and your function based view looks like this: _views.py_
@api_view([&amp;#39;GET&amp;#39;]) @permission_classes((AllowAny,)) def index(request): data = { &amp;#39;field&amp;#39;: &amp;#39;value&amp;#39; } return Response(data) Then you can unit test such view by creating a minimal instance of the HttpRequest and pass it to that view. I tried to mock to test such view with the Mock  library, by with no luck!</description>
    </item>
    
    <item>
      <title>Run your Selenium driven tests in parallel using TestNG.</title>
      <link>https://kowalcj0.github.io/2014/03/28/run-your-selenium-driven-tests-in-parallel-using-testng/</link>
      <pubDate>Fri, 28 Mar 2014 20:47:02 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/03/28/run-your-selenium-driven-tests-in-parallel-using-testng/</guid>
      <description>Sometime ago, I came across this post: Parallel WebDriver executions using TestNG  .
I thought it&amp;rsquo;d be good to have it in a repo to save you time setting up your own project. Basically this example project runs JUnit tests in parallel using TestNG. Tests are grouped by the browser in which they&amp;rsquo;re going to be executed (have a look at the TestNG XML Suite files in src/test/resources). As you might have guessed to drive the browsers we use Selenium WebDriver :) And of course you can run your tests locally or remotely using Selenium GRID.</description>
    </item>
    
    <item>
      <title>GEE [Jmeter-ec2] - video tutorials part 2</title>
      <link>https://kowalcj0.github.io/2014/01/03/gee-jmeter-ec2-video-tutorials-part-2/</link>
      <pubDate>Fri, 03 Jan 2014 10:02:26 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/01/03/gee-jmeter-ec2-video-tutorials-part-2/</guid>
      <description>Hi All, I just added few more videos showing how to configure your test environment to run your JMeter tests:
 locally on a Vagrant box using remote machines and on Amazon EC2  04 - Create a first test plan and run it using Gee and a vagrant box Shows how to create a new test plan from a template project. Then how to run it using GEE on our local vagrant box.</description>
    </item>
    
    <item>
      <title>Configure your Logitech Performance MX Mouse buttons to work with Linux Mint</title>
      <link>https://kowalcj0.github.io/2013/11/28/configure-your-logitech-performance-mx-mouse-buttons-to-work-with-linux-mint/</link>
      <pubDate>Thu, 28 Nov 2013 11:50:40 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/28/configure-your-logitech-performance-mx-mouse-buttons-to-work-with-linux-mint/</guid>
      <description>To make your extra mouse buttons work on Linux Mint (I&amp;rsquo;ve tested it with v15) follow all the steps listed in this tutorial  except the step 4 :)
Once you get to step 4, use this key mappings to make the &amp;lsquo;zoom&amp;rsquo; and &amp;lsquo;switch between windows&amp;rsquo; buttons work as on windows.
vi $HOME/.xbindkeysrc ... # show all windows: Scale &amp;#34;xte &amp;#39;keydown Control_L&amp;#39; &amp;#39;keydown Alt_L&amp;#39; &amp;#39;key Down&amp;#39; &amp;#39;keyup Control_L&amp;#39; &amp;#39;keyup Alt_L&amp;#39;&amp;#34; b:10 + release # Zooming with Logitech Performance MX mouse # thx to: https://www.</description>
    </item>
    
    <item>
      <title>Vim - tips and tricks</title>
      <link>https://kowalcj0.github.io/2013/11/25/vim-tips-and-tricks/</link>
      <pubDate>Mon, 25 Nov 2013 13:04:27 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/25/vim-tips-and-tricks/</guid>
      <description>Record a macro that will delete everything after matching character and repeat it N-times. In this example we&amp;rsquo;re going to use = as the matching character.
 qaf=D⏎q
 Where:
 qa - to start recording and save it under &amp;lsquo;a&amp;rsquo; buffer f= - find &amp;lsquo;=&amp;rsquo; character D - Delete everything to the EOL ⏎ - press &amp;lsquo;enter&amp;rsquo; to go to the beginning of next line q - to stop recording the macro then to repeat the macro N-times, i.</description>
    </item>
    
    <item>
      <title>GEE [Jmeter-ec2] - video tutorials part 1</title>
      <link>https://kowalcj0.github.io/2013/11/22/gee-jmeter-ec2-video-tutorials-part-1/</link>
      <pubDate>Fri, 22 Nov 2013 17:33:00 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/22/gee-jmeter-ec2-video-tutorials-part-1/</guid>
      <description>I finally started recording videos explaining how to use Gee  .
Gee is a tool based on a JMeter-EC2  project by Oliver Lloyd.
It allows you to run JMeter tests on:
 Amazon EC2 Vagrant boxes Linux hosts  Running your tests using this tool is better than using the standard distributed mode in Jmeter, because it doesn&amp;rsquo;t require constant communication between the master node and slave nodes.</description>
    </item>
    
    <item>
      <title>How to compile and install latest version of Vim with support for: X11 clipboard, ruby, python 2 or python 3</title>
      <link>https://kowalcj0.github.io/2013/11/19/how-to-compile-and-install-latest-version-of-vim-with-support-for-x11-clipboard-ruby-python-2-3/</link>
      <pubDate>Tue, 19 Nov 2013 14:19:12 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/19/how-to-compile-and-install-latest-version-of-vim-with-support-for-x11-clipboard-ruby-python-2-3/</guid>
      <description>This was tested with vim 7.4.(1-398) (Update: 2013-12-03 apparently you can&amp;rsquo;t build vim with support for both python 2 and python 3, so I had to update this tutorial a bit :) ) (Update: 2014-08-09 Added three commands: &amp;ldquo;hg pull&amp;rdquo;, &amp;ldquo;hg update&amp;rdquo; and &amp;ldquo;hg status&amp;rdquo; to pull the latest version of the repo)
First of all install all the dependencies required when compiling Vim with additional options:
sudo apt-get install \  mercurial \  python \  python-dev \  python3 \  python3-dev \  ruby \  ruby-dev \  libx11-dev \  libxt-dev \  libgtk2.</description>
    </item>
    
    <item>
      <title>How to add official Chromium-browser PPA repository to Linux Mint 15 and install the latest stable build</title>
      <link>https://kowalcj0.github.io/2013/11/07/install-chromium-browser-on-linux-mint-15/</link>
      <pubDate>Thu, 07 Nov 2013 13:59:41 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/07/install-chromium-browser-on-linux-mint-15/</guid>
      <description>Here&amp;rsquo;s the official Chromium-browser PPA: https://launchpad.net/~chromium-daily/+archive/stable
To install latest stable build follow 3 simple steps:
  add &amp;ldquo;deb http://ppa.launchpad.net/chromium-daily/stable/ubuntu raring main&amp;rdquo; to /etc/apt/sources.list
  add repo&amp;rsquo;s pub key so that we can avoid problems like the one below:
W: GPG error: http://ppa.launchpad.net raring Release: The following signatures couldn&amp;#39;t be verified because the public key is not available: NO_PUBKEY 5A9BF3BB4E5E17B5 sudo gpg \  --keyserver hkp://keys.gnupg.net:80 \  --recv 5A9BF3BB4E5E17B5 sudo gpg \  --export FBEF0D696DE1C72BA5A835FE5A9BF3BB4E5E17B5 |\  sudo apt-key add - btw.</description>
    </item>
    
    <item>
      <title>How to build pidgin-sipe plugin with audio and video support on ubuntu/linux mint</title>
      <link>https://kowalcj0.github.io/2013/10/11/how-to-build-pidgin-sipe-plugin-with-audio-and-video-support-on-ubuntulinux-mint/</link>
      <pubDate>Fri, 11 Oct 2013 16:37:49 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/10/11/how-to-build-pidgin-sipe-plugin-with-audio-and-video-support-on-ubuntulinux-mint/</guid>
      <description>Tested with pidgin-sipe-1.17.0  First of all install dependencies:
sudo apt-get install \  libxml2-dev \  libnspr4-dev \  libnss3-dev \  libgstreamer0.10-dev \  libnice-dev \  libpurple-dev \  libnss3-dev \  libglib2.0-dev Then check where libnspr4 was installed:
sudo dpkg -L libnspr4 Then finally configure nspr paths accordingly, compile and install it:
./configure \  --prefix=/usr \  --with-vv \  --with-nss-includes=/usr/include/nss \  --with-nss-libs=/usr/lib/x86_64-linux-gnu \  --with-nspr-includes=/usr/include/nspr \  --with-nspr-libs=/usr/lib/x86_64-linux-gnu make sudo make install Hope it helps :)</description>
    </item>
    
    <item>
      <title>How to change the default keyserver used by add-apt-repository</title>
      <link>https://kowalcj0.github.io/2013/09/13/how-to-change-the-default-keyserver-used-by-the-command-sudo-add-apt-repository/</link>
      <pubDate>Fri, 13 Sep 2013 13:55:52 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/09/13/how-to-change-the-default-keyserver-used-by-the-command-sudo-add-apt-repository/</guid>
      <description>If you&amp;rsquo;ve encountered problems with connecting to keyserver.ubuntu.com like:
.... Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --secret-keyring /tmp/tmp.UsuIhHAgLO --trustdb-name /etc/apt//trustdb.gpg --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyserver keyserver.ubuntu.com --recv-keys CFCA9579 gpg: requesting key CFCA9579 from hkp server keyserver.ubuntu.com gpg: keyserver timed out gpg: keyserver receive failed: keyserver error Which might show up after you&amp;rsquo;ve added a new ppa to your list of repositories using add-apt-repository
i.e.: &amp;ldquo;sudo add-apt-repository ppa:jon-severinsson/ffmpeg&amp;rdquo;
Then what you have to do is to change the default port used for obtaining pgp keys from 11371 to 80.</description>
    </item>
    
    <item>
      <title>Monitoring JVM metrics via JMX management interface in JMeter</title>
      <link>https://kowalcj0.github.io/2013/07/30/monitoring-jvm-metrics-via-jmx-management-interface-in-jmeter/</link>
      <pubDate>Tue, 30 Jul 2013 14:31:45 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/07/30/monitoring-jvm-metrics-via-jmx-management-interface-in-jmeter/</guid>
      <description>What do we need:
 any java application (doesn&amp;rsquo;t matter whether it was written in Java/Play/Groovy/JPython etc) PerfMon Server Agent   Apache JMeter  wiith jmeter-plugins  installed  Once you have plugins installed them in the jMeter&amp;rsquo;s lib/ext folder, then:
 On the box you want to monitor, copy templates: jmxremote.password &amp;amp; jmxremote.access from $JAVA_HOME/lib/management to for example: /srv/play/ edit them according to your liking launch your JAVA application with additional parameters: java \  -jar your_application.</description>
    </item>
    
    <item>
      <title>Dump network traffic with tcpdump to file with time-stamp in the filename</title>
      <link>https://kowalcj0.github.io/2013/05/17/dump-network-traffic-with-tcpdump-to-file-with-time-stamp-in-the-filename/</link>
      <pubDate>Fri, 17 May 2013 15:23:00 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/05/17/dump-network-traffic-with-tcpdump-to-file-with-time-stamp-in-the-filename/</guid>
      <description>A one-liner that dumps the network traffic into a file with a time-stamp in its name:
date +&amp;#39;%Y-%m-%d_%H_%M-%Z&amp;#39; | xargs -I {} bash -c &amp;#34;sudo tcpdump -nq -s 0 -i eth0 -w ./tcpdump-{}.pcap&amp;#34; </description>
    </item>
    
    <item>
      <title>Useful links to all owners of a kindle or any other ebook reader</title>
      <link>https://kowalcj0.github.io/2013/05/11/useful-links-to-all-owners-of-a-kindle-or-any-other-ebook-reader/</link>
      <pubDate>Sat, 11 May 2013 17:08:00 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/05/11/useful-links-to-all-owners-of-a-kindle-or-any-other-ebook-reader/</guid>
      <description>Send web pages and RSS directly to Kindle  http://www.klip.me/ https://sendtoreader.com/  eBook management  https://calibre-ebook.com/  Free en-pl dictionary  http://www.bumato.pl/  News sites  https://swiatczytnikow.pl/  Free and legit books International  https://www.gutenberg.org/ https://archive.org/details/texts  English  http://www.freekindlebooks.org/ https://www.amazon.com/s/?node=2245146011 https://openlibrary.org/ https://www.openculture.com/free_ebooks  French  https://www.ebooksgratuits.com/ https://beq.ebooksgratuits.com/ http://www.livrespourtous.com/ https://www.amazon.fr/b?ie=UTF8&amp;amp;node=927173031 https://pix-geeks.com/ebook-gratuit/  Polish  https://wolnelektury.pl/  Magiczne katalogi Katalogi legalnych i darmowych książek na kidnle&amp;rsquo;a, które można ściągnąć bezpośrednio na urządzenie, bez potrzeby kopiowania na urządzenie czy wysyłania na maila itp.</description>
    </item>
    
    <item>
      <title>How to selectively run stories tagged with multiple words in a meta field with jBehave</title>
      <link>https://kowalcj0.github.io/2013/01/22/how-to-selectively-run-stories-tagged-with-multiple-words-in-a-meta-field-with-jbehave/</link>
      <pubDate>Tue, 22 Jan 2013 17:17:29 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/01/22/how-to-selectively-run-stories-tagged-with-multiple-words-in-a-meta-field-with-jbehave/</guid>
      <description>Prerequisites  a working jBehave based project  This short tutorial is based on an jbehave-tutorial project available on github: https://github.com/jbehave/jbehave-tutorial.
To be precise I used the java-spring submodule from the etsy-selenium module, available here: https://github.com/jbehave/jbehave-tutorial/tree/master/etsy-selenium/java-spring, to run the modified story presented below.
Maven  OK, let&amp;rsquo;s consider a situation when we have stories belonging to multiple features, categories etc.
Below is an example story, tagged with multiple categories and features: anExampleStoryWithMultipleWordsInAMetaKeyword.</description>
    </item>
    
  </channel>
</rss>