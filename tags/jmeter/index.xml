<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jmeter on Home</title>
    <link>https://kowalcj0.github.io/tags/jmeter/</link>
    <description>Recent content in jmeter on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 03 Jan 2014 10:02:26 +0000</lastBuildDate>
    
	<atom:link href="https://kowalcj0.github.io/tags/jmeter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GEE [Jmeter-ec2] - video tutorials part 2</title>
      <link>https://kowalcj0.github.io/2014/01/03/gee-jmeter-ec2-video-tutorials-part-2/</link>
      <pubDate>Fri, 03 Jan 2014 10:02:26 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2014/01/03/gee-jmeter-ec2-video-tutorials-part-2/</guid>
      <description>Hi All, I just added few more videos showing how to configure your test environment to run your JMeter tests:
 locally on a Vagrant box using remote machines and on Amazon EC2  04 - Create a first test plan and run it using Gee and a vagrant box Shows how to create a new test plan from a template project. Then how to run it using GEE on our local vagrant box.</description>
    </item>
    
    <item>
      <title>GEE [Jmeter-ec2] - video tutorials part 1</title>
      <link>https://kowalcj0.github.io/2013/11/22/gee-jmeter-ec2-video-tutorials-part-1/</link>
      <pubDate>Fri, 22 Nov 2013 17:33:00 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/11/22/gee-jmeter-ec2-video-tutorials-part-1/</guid>
      <description>I finally started recording videos explaining how to use Gee  .
Gee is a tool based on a JMeter-EC2  project by Oliver Lloyd.
It allows you to run JMeter tests on:
 Amazon EC2 Vagrant boxes Linux hosts  Running your tests using this tool is better than using the standard distributed mode in Jmeter, because it doesn&amp;rsquo;t require constant communication between the master node and slave nodes.</description>
    </item>
    
    <item>
      <title>Monitoring JVM metrics via JMX management interface in JMeter</title>
      <link>https://kowalcj0.github.io/2013/07/30/monitoring-jvm-metrics-via-jmx-management-interface-in-jmeter/</link>
      <pubDate>Tue, 30 Jul 2013 14:31:45 +0000</pubDate>
      
      <guid>https://kowalcj0.github.io/2013/07/30/monitoring-jvm-metrics-via-jmx-management-interface-in-jmeter/</guid>
      <description>What do we need:
 any java application (doesn&amp;rsquo;t matter whether it was written in Java/Play/Groovy/JPython etc) PerfMon Server Agent   Apache JMeter  wiith jmeter-plugins  installed  Once you have plugins installed them in the jMeter&amp;rsquo;s lib/ext folder, then:
 On the box you want to monitor, copy templates: jmxremote.password &amp;amp; jmxremote.access from $JAVA_HOME/lib/management to for example: /srv/play/ edit them according to your liking launch your JAVA application with additional parameters: java \  -jar your_application.</description>
    </item>
    
  </channel>
</rss>